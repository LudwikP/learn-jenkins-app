pipeline {
    agent any

    environment {
        NETLIFY_SITE_ID = '7216df1a-a0ab-4356-96ed-227605b61f50'
        NETLIFY_AUTH_TOKEN = credentials('netlify-token')
    }

    stages {
        // some comment
        stage('Build') {
            agent {
                docker { 
                    image 'node:18-alpine'
                    reuseNode true
                }
            }
            steps {
                echo 'Building'
                sh '''
                    ls -la
                    node --version
                    npm --version
                    npm ci
                    npm run build
                    ls -la
                '''
            }
        }
        stage('run tests') {
            parallel {
                stage('Unit') {
                    agent {
                        docker { 
                            image 'node:18-alpine'
                            reuseNode true
                        }
                    }
                    steps {
                        echo 'Testing'
                        sh '''
                        test -f build/index.html
                        grep "JavaScript" build/index.html
                        npm test
                        '''
                    }

                    post {
                        always {
                            junit 'jest-results/junit.xml'
                            }
                        }    
                    }

            stage('E2E') {
                agent {
                    docker { 
                        image 'mcr.microsoft.com/playwright:v1.39.0-jammy'
                        reuseNode true
                    }
                }
                steps {
                    echo 'E2E Testing'
                    // npm install -g serve will install globally which will cause some permission issues
                    // run locally by npm install serve
                    // & run server in background allowing test to be run 
                    // sleep to wait for the server to start
                    //--reporter=html publishes test report in html - html publisher jenkins plugin in needed
                    sh '''
                        npm install serve
                        node_modules/.bin/serve -s build &
                        sleep 10
                        npx playwright test --reporter=html                 
                    '''
                }

                post {
                    always {
                        //generated in jenkins syntax generator
                        //publishing allows to access the content from the side menu of a job 
                        publishHTML([
                            allowMissing: false, 
                            alwaysLinkToLastBuild: false, 
                            keepAll: false, 
                            reportDir: 'playwright-report', 
                            reportFiles: 'index.html', 
                            reportName: 'Playwright HTML Report', 
                            reportTitles: '', 
                            useWrapperFileDirectly: true
                            ])
                        }
                    }    
                }
            }
        }

        stage('Deploy') {
            agent {
                docker { 
                    image 'node:18-alpine'
                    reuseNode true
                }
            }
            steps {
                echo 'Deploying'
                sh '''
                    npm install netlify-cli
                    node_modules/.bin/netlify --version
                    echo "Deploying to site id NETLIFY_SITE_ID"
                    node_modules/.bin/netlify status
                    node_modules/.bin/netlify deploy --dir=build --prod
                '''
            }
        }
        
    }

    post {
        always {
            junit 'jest-results/junit.xml'
            //generated in jenkins syntax generator
            //publishing allows to access the content from the side menu of a job 
            publishHTML([
                allowMissing: false, 
                alwaysLinkToLastBuild: false, 
                keepAll: false, 
                reportDir: 'playwright-report', 
                reportFiles: 'index.html', 
                reportName: 'Playwright HTML Report', 
                reportTitles: '', 
                useWrapperFileDirectly: true
                ])
        }
    }
    
}
